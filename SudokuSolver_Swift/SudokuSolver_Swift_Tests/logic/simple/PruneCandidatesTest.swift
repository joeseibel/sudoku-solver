import XCTest

final class PruneCandidatesTest: XCTestCase {
    func test() {
        let board = "000105000140000670080002400063070010900000003010090520007200080026000035000409000"
        let expected: [BoardModification] = [
            .removeCandidates(RemoveCandidates(row: 0, column: 0, candidates: 1, 4, 5, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 0, column: 1, candidates: 1, 2, 4, 5, 6, 8)),
            .removeCandidates(RemoveCandidates(row: 0, column: 2, candidates: 1, 3, 4, 5, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 0, column: 4, candidates: 1, 2, 5, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 0, column: 6, candidates: 1, 4, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 0, column: 7, candidates: 1, 2, 3, 4, 5, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 0, column: 8, candidates: 1, 3, 4, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 1, column: 2, candidates: 1, 3, 4, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 1, column: 3, candidates: 1, 2, 4, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 1, column: 4, candidates: 1, 2, 4, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 1, column: 5, candidates: 1, 2, 4, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 1, column: 8, candidates: 1, 3, 4, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 2, column: 0, candidates: 1, 2, 4, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 2, column: 2, candidates: 1, 2, 3, 4, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 2, column: 3, candidates: 1, 2, 4, 5, 8)),
            .removeCandidates(RemoveCandidates(row: 2, column: 4, candidates: 1, 2, 4, 5, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 2, column: 7, candidates: 1, 2, 3, 4, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 2, column: 8, candidates: 2, 3, 4, 5, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 3, column: 0, candidates: 1, 3, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 3, column: 3, candidates: 1, 2, 3, 4, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 3, column: 5, candidates: 1, 2, 3, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 3, column: 6, candidates: 1, 2, 3, 4, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 3, column: 8, candidates: 1, 2, 3, 5, 6, 7)),
            .removeCandidates(RemoveCandidates(row: 4, column: 1, candidates: 1, 2, 3, 4, 6, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 2, candidates: 1, 3, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 3, candidates: 1, 2, 3, 4, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 4, candidates: 3, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 5, candidates: 2, 3, 5, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 6, candidates: 1, 2, 3, 4, 5, 6, 9)),
            .removeCandidates(RemoveCandidates(row: 4, column: 7, candidates: 1, 2, 3, 5, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 5, column: 0, candidates: 1, 2, 3, 5, 6, 9)),
            .removeCandidates(RemoveCandidates(row: 5, column: 2, candidates: 1, 2, 3, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 5, column: 3, candidates: 1, 2, 4, 5, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 5, column: 5, candidates: 1, 2, 5, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 5, column: 8, candidates: 1, 2, 3, 5, 9)),
            .removeCandidates(RemoveCandidates(row: 6, column: 0, candidates: 1, 2, 6, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 6, column: 1, candidates: 1, 2, 4, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 6, column: 4, candidates: 2, 4, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 6, column: 5, candidates: 2, 4, 5, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 6, column: 6, candidates: 2, 3, 4, 5, 6, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 6, column: 8, candidates: 2, 3, 5, 7, 8)),
            .removeCandidates(RemoveCandidates(row: 7, column: 0, candidates: 1, 2, 3, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 7, column: 3, candidates: 1, 2, 3, 4, 5, 6, 9)),
            .removeCandidates(RemoveCandidates(row: 7, column: 4, candidates: 2, 3, 4, 5, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 7, column: 5, candidates: 2, 3, 4, 5, 6, 9)),
            .removeCandidates(RemoveCandidates(row: 7, column: 6, candidates: 2, 3, 4, 5, 6, 8)),
            .removeCandidates(RemoveCandidates(row: 8, column: 0, candidates: 1, 2, 4, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 1, candidates: 1, 2, 4, 6, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 2, candidates: 2, 3, 4, 6, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 4, candidates: 2, 4, 7, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 6, candidates: 3, 4, 5, 6, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 7, candidates: 1, 2, 3, 4, 5, 7, 8, 9)),
            .removeCandidates(RemoveCandidates(row: 8, column: 8, candidates: 3, 4, 5, 8, 9))
        ]
        assertLogicalSolution(expected: expected, board: Board(simpleBoard: board), logicFunction: pruneCandidates)
    }
}
